"""init db

Revision ID: 4d084ca23efa
Revises: 
Create Date: 2022-12-27 15:19:50.111200

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '4d084ca23efa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='项目名称'),
    sa.Column('desc', sa.String(length=200), nullable=False, comment='项目描述'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage_server',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='存储服务名称'),
    sa.Column('url', sa.String(length=200), nullable=False, comment='地址'),
    sa.Column('storage_class', sa.String(length=200), nullable=False, comment='存储实现'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('artifact',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='归档名称'),
    sa.Column('desc', sa.String(length=2000), nullable=False, comment='归档描述'),
    sa.Column('image', sa.String(length=200), nullable=False, comment='镜像名称'),
    sa.Column('tag', sa.String(length=200), nullable=True, comment='归档标签'),
    sa.Column('version', sa.String(length=20), nullable=True, comment='镜像版本'),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='job名称'),
    sa.Column('cmdline', sa.String(length=500), nullable=True, comment='执行命令'),
    sa.Column('environment', sa.String(length=2000), nullable=True, comment='环境变量'),
    sa.Column('volume', sa.String(length=2000), nullable=True, comment='目录挂载'),
    sa.Column('trigger_expression', sa.String(length=100), nullable=False, comment='crontab表达式'),
    sa.Column('storage_enable', sa.Boolean(), nullable=True, comment='是否开启存储'),
    sa.Column('storage_server_id', sa.Integer(), nullable=True, comment='存储服务id'),
    sa.Column('executor_type', sa.String(length=100), nullable=False, comment='执行器类型'),
    sa.Column('enabled', sa.Boolean(), nullable=True, comment='job状态'),
    sa.Column('pause', sa.Boolean(), nullable=True, comment='任务暂停状态'),
    sa.Column('executor_selector', sa.String(length=100), nullable=True, comment='执行器选择器'),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifact.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['storage_server_id'], ['storage_server.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='任务名称'),
    sa.Column('status', sa.Integer(), nullable=True, comment='任务状态'),
    sa.Column('job_id', sa.Integer(), nullable=True, comment='job id'),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_detail',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('item_count', sa.Integer(), nullable=False, comment='写入数据量'),
    sa.Column('detail', sa.String(length=100), nullable=False, comment='任务失败值存储'),
    sa.Column('task_id', sa.Integer(), nullable=False, comment='task id'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_detail')
    op.drop_table('task')
    op.drop_table('job')
    op.drop_table('artifact')
    op.drop_table('storage_server')
    op.drop_table('project')
    # ### end Alembic commands ###
