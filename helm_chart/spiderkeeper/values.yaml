# Default values for spiderkeeper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

web:
  name: frontend
  component: spiderkeeper-web
  replicaCount: 1
  image:
    repository: crawlerstack-spiderkeeper-web
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v4.0.1"

  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  resources: { }

  extraEnvVars:
    enabled: true
    vars:
      - name: SITE_ADDRESS
        value: http://spiderkeeper-server:8080

  configMap:
    # Specifies whether a configmap should be created
    create: false
    name: spiderkeeper-web-configmap
    configOverrides:
      - name: Caddyfile
        data: |
          :80 {
              reverse_proxy /api/* {$SITE_ADDRESS} {
                   header_up Host {upstream_hostport}
              }
              root * /usr/share/caddy
              file_server
              log {
                  output file /tmp/access.log {
                      roll_size 100mb
                      roll_keep 5
                      roll_keep_for 720h
                  }
              }
          }

  service:
    enabled: true
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: www.spiderkeeper.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

server:
  name: server
  component: spiderkeeper-server
  replicaCount: 1
  image:
    repository: crawlerstack-spiderkeeper
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v4.0.1"
    command:
      - "crawlerstack_spiderkeeper_server"
    args:
      - "api"
      - "-h"
      - "0.0.0.0"
      - "-p"
      - "8080"

  configMap:
    # Specifies whether a configmap should be created
    create: true
    name: spiderkeeper-server-configmap
    configOverrides:
      - name: settings.yml
        data: |
          MQ: amqp://rabbitmq:rabbitmq@192.168.6.146:5672/
          SCHEDULER_URL: http://spiderkeeper-scheduler:8081/api/v1
          LOGLEVEL: INFO
          CORS_ORIGINS:
            - "*"
          DATA_TASK_INTERVAL: 15
          APM_ENABLE: false
          DATABASE: mysql+aiomysql://root:password@192.168.6.146:3306/spiderkeeper_server?charset=UTF8MB4
  # MQ: amqp://rabbitmq:rabbitmq@192.168.6.15:5672/test

  persistence:
    enabled: true
    # existingClaim: spiderkeeper-executor
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    labels: { }
    annotations: { }
    storageClass:

  extraEnvVars:
    enabled: true
    vars:
      - name: TZ
        value: Asia/Shanghai

  extraVolumes: [ ]
  extraVolumeMounts: [ ]
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }

  service:
    # default ClusterIP
    enabled: true
    type: ClusterIP
    port: 8080

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

scheduler:
  name: scheduler
  component: spiderkeeper-scheduler
  replicaCount: 1
  image:
    repository: crawlerstack-spiderkeeper
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v4.0.1"
    command:
      - "crawlerstack_spiderkeeper_scheduler"
    args:
      - "api"
      - "-h"
      - "0.0.0.0"
      - "-p"
      - "8081"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  configMap:
    # Specifies whether a configmap should be created
    create: true
    name: spiderkeeper-scheduler-configmap
    configOverrides:
      - name: settings.yml
        data: |
          SERVER_BASE_URL: http://spiderkeeper-server:8080/api/v1
          FORWARDER_BASE_URL: http://spiderkeeper-forwarder:8083/api/v1
          SCHEDULER_BASE_URL: http://spiderkeeper-scheduler:8081/api/v1
          DATABASE: mysql+aiomysql://root:password@192.168.6.146:3306/spiderkeeper_scheduler?charset=UTF8MB4
          SCHEDULER_JOB_STORE_DEFAULT: mysql://root:password@192.168.6.146:3306/spiderkeeper_scheduler
          HEARTBEAT_INTERVAL: 20

  persistence:
    enabled: false
    # existingClaim: spiderkeeper-executor
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    labels: { }
    annotations: { }
    storageClass:

  extraEnvVars:
    enabled: true
    vars:
      - name: TZ
        value: Asia/Shanghai

  extraVolumes: [ ]
  extraVolumeMounts: [ ]
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }

  service:
    # default ClusterIP
    enabled: true
    type: ClusterIP
    port: 8081

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

forwarder:
  name: forwarder
  component: spiderkeeper-forwarder
  replicaCount: 1
  image:
    repository: crawlerstack-spiderkeeper
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v4.0.1"
    command:
      - "crawlerstack_spiderkeeper_forwarder"
    args:
      - "api"
      - "-h"
      - "0.0.0.0"
      - "-p"
      - "8083"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  configMap:
    # Specifies whether a configmap should be created
    create: true
    name: spiderkeeper-forwarder-configmap
    configOverrides:
      - name: settings.yml
        data: |
          MQ: amqp://rabbitmq:rabbitmq@192.168.6.146:5672/

  persistence:
    enabled: false
    # existingClaim: spiderkeeper-executor
    size: 10Gi
    existingClaim: ""
    accessModes:
      - ReadWriteOnce
    labels: { }
    annotations: { }
    storageClass:

  extraEnvVars:
    enabled: false
    vars:
      - name: TZ
        value: Asia/Shanghai

  extraVolumes: [ ]
  extraVolumeMounts: [ ]
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }

  service:

    enabled: true
    type: ClusterIP
    port: 8083

  ingress:
    enabled: true
    className: ""
    annotations: { }
    hosts:
      - host: forwarder.spiderkeeper.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

executor:
  name: executor
  component: spiderkeeper-executor
  replicaCount: 1
  image:
    repository: crawlerstack-spiderkeeper
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v4.0.1"
    command:
      - "crawlerstack_spiderkeeper_executor"
    args:
      - "api"
      - "-h"
      - "0.0.0.0"
      - "-p"
      - "8082"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "spiderkeeper-executor"

  role:
    create: true

  releBinding:
    create: true

  configMap:
    # Specifies whether a configmap should be created
    create: true
    name: spiderkeeper-executor-configmap
    existConfigMap: ''
    configOverrides:
      - name: settings.yml
        data: |
          LOCAL_URL: http://spiderkeeper-executor:8082/api/v1
          HEARTBEAT_INTERVAL: 5
          HEARTBEAT_TIMEOUT: 200
          SCHEDULER_BASE_URL: http://spiderkeeper-scheduler:8081/api/v1
          NAMESPACE: spiderkeeper
          EXECUTOR_TYPE: k8s
          EXECUTOR_NAME: 'k8s-local'
          EXECUTOR_SELECTOR: 'local'

  persistence:
    enabled: false
    # existingClaim: spiderkeeper-executor
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    labels: { }
    annotations: { }
    storageClass:

  extraEnvVars:
    enabled: false
    vars:
      - name: TZ
        value: Asia/Shanghai

  extraVolumes: [ ]

  extraVolumeMounts: [ ]

  podAnnotations: { }

  podSecurityContext: { }

  securityContext: { }

  service:
    enabled: true
    type: ClusterIP
    port: 8082

  ingress:
    enabled: false
    className: ""
    annotations: { }
    hosts:
      - host: executor.spiderkeeper.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "spiderkeeper-default"

nameOverride: ""
fullnameOverride: ""
imagePullSecrets: [ ]

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

